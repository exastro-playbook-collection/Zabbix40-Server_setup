# This is a configuration file for Zabbix server daemon
# To get more information about Zabbix, visit http://www.zabbix.com

############ GENERAL PARAMETERS #################

### Option: ListenPort
#	Listen port for trapper.
#
# Mandatory: no
# Range: 1024-32767
# Default:
# ListenPort=10051

{% if VAR_Zabbix40SV_ListenPort is defined and VAR_Zabbix40SV_ListenPort != None %}
ListenPort={{ VAR_Zabbix40SV_ListenPort }}
{% endif %}

### Option: SourceIP
#	Source IP address for outgoing connections.
#
# Mandatory: no
# Default:
# SourceIP=

{% if VAR_Zabbix40SV_SourceIP is defined and VAR_Zabbix40SV_SourceIP != None %}
SourceIP={{ VAR_Zabbix40SV_SourceIP }}
{% endif %}

### Option: LogType
#	Specifies where log messages are written to:
#		system  - syslog
#		file    - file specified with LogFile parameter
#		console - standard output
#
# Mandatory: no
# Default:
# LogType=file

{% if VAR_Zabbix40SV_LogType is defined and VAR_Zabbix40SV_LogType != None %}
LogType={{ VAR_Zabbix40SV_LogType }}
{% endif %}

### Option: LogFile
#	Log file name for LogType 'file' parameter.
#
# Mandatory: yes, if LogType is set to file, otherwise no
# Default:
# LogFile=

{% if VAR_Zabbix40SV_LogFile is defined and VAR_Zabbix40SV_LogFile != None %}
LogFile={{ VAR_Zabbix40SV_LogFile }}
{% endif %}

#LogFile=/var/log/zabbix/zabbix_server.log

### Option: LogFileSize
#	Maximum size of log file in MB.
#	0 - disable automatic log rotation.
#
# Mandatory: no
# Range: 0-1024
# Default:
# LogFileSize=1

{% if VAR_Zabbix40SV_LogFileSize is defined and VAR_Zabbix40SV_LogFileSize != None %}
LogFileSize={{ VAR_Zabbix40SV_LogFileSize }}
{% endif %}

#LogFileSize=0

### Option: DebugLevel
#	Specifies debug level:
#	0 - basic information about starting and stopping of Zabbix processes
#	1 - critical information
#	2 - error information
#	3 - warnings
#	4 - for debugging (produces lots of information)
#	5 - extended debugging (produces even more information)
#
# Mandatory: no
# Range: 0-5
# Default:
# DebugLevel=3

{% if VAR_Zabbix40SV_DebugLevel is defined and VAR_Zabbix40SV_DebugLevel != None %}
DebugLevel={{ VAR_Zabbix40SV_DebugLevel }}
{% endif %}

### Option: PidFile
#	Name of PID file.
#
# Mandatory: no
# Default:
# PidFile=/tmp/zabbix_server.pid

PidFile=/var/run/zabbix/zabbix_server.pid

### Option: SocketDir
#	IPC socket directory.
#	Directory to store IPC sockets used by internal Zabbix services.
#
# Mandatory: no
# Default:
# SocketDir=/tmp

{% if VAR_Zabbix40SV_SocketDir is defined and VAR_Zabbix40SV_SocketDir != None %}
SocketDir={{ VAR_Zabbix40SV_SocketDir }}
{% endif %}

#SocketDir=/var/run/zabbix

### Option: DBHost
#	Database host name.
#	If set to localhost, socket is used for MySQL.
#	If set to empty string, socket is used for PostgreSQL.
#
# Mandatory: no
# Default:
# DBHost=localhost

{% if VAR_Zabbix40SV_DBHost is defined and VAR_Zabbix40SV_DBHost != None %}
DBHost={{ VAR_Zabbix40SV_DBHost }}
{% endif %}

### Option: DBName
#	Database name.
#	For SQLite3 path to database file must be provided. DBUser and DBPassword are ignored.
#
# Mandatory: yes
# Default:
# DBName=

{% if VAR_Zabbix40SV_DBName is defined and VAR_Zabbix40SV_DBName != None %}
DBName={{ VAR_Zabbix40SV_DBName }}
{% endif %}

### Option: DBSchema
#	Schema name. Used for IBM DB2 and PostgreSQL.
#
# Mandatory: no
# Default:
# DBSchema=

{% if VAR_Zabbix40SV_DBSchema is defined and VAR_Zabbix40SV_DBSchema != None %}
DBSchema={{ VAR_Zabbix40SV_DBSchema }}
{% endif %}

### Option: DBUser
#	Database user. Ignored for SQLite.
#
# Mandatory: no
# Default:
# DBUser=

{% if VAR_Zabbix40SV_DBUser is defined and VAR_Zabbix40SV_DBUser != None %}
DBUser={{ VAR_Zabbix40SV_DBUser }}
{% endif %}

### Option: DBPassword
#	Database password. Ignored for SQLite.
#	Comment this line if no password is used.
#
# Mandatory: no
# Default:
# DBPassword=

{% if VAR_Zabbix40SV_DBPassword is defined and VAR_Zabbix40SV_DBPassword != None %}
DBPassword={{ VAR_Zabbix40SV_DBPassword }}
{% endif %}

### Option: DBSocket
#	Path to MySQL socket.
#
# Mandatory: no
# Default:
# DBSocket=

{% if VAR_Zabbix40SV_DBSocket is defined and VAR_Zabbix40SV_DBSocket != None %}
DBSocket={{ VAR_Zabbix40SV_DBSocket }}
{% endif %}

### Option: DBPort
#	Database port when not using local socket. Ignored for SQLite.
#
# Mandatory: no
# Range: 1024-65535
# Default:
# DBPort=

{% if VAR_Zabbix40SV_DBPort is defined and VAR_Zabbix40SV_DBPort != None %}
DBPort={{ VAR_Zabbix40SV_DBPort }}
{% endif %}

### Option: HistoryStorageURL
#	History storage HTTP[S] URL.
#
# Mandatory: no
# Default:
# HistoryStorageURL=

{% if VAR_Zabbix40SV_HistoryStorageURL is defined and VAR_Zabbix40SV_HistoryStorageURL != None %}
HistoryStorageURL={{ VAR_Zabbix40SV_HistoryStorageURL }}
{% endif %}

### Option: HistoryStorageTypes
#	Comma separated list of value types to be sent to the history storage.
#
# Mandatory: no
# Default:
# HistoryStorageTypes=uint,dbl,str,log,text

{% if VAR_Zabbix40SV_HistoryStorageTypes is defined and VAR_Zabbix40SV_HistoryStorageTypes != None %}
HistoryStorageTypes={{ VAR_Zabbix40SV_HistoryStorageTypes }}
{% endif %}

### Option: HistoryStorageDateIndex
#	Enable preprocessing of history values in history storage to store values in different indices based on date.
#	0 - disable
#	1 - enable
#
# Mandatory: no
# Default:
# HistoryStorageDateIndex=0

{% if VAR_Zabbix40SV_HistoryStorageDateIndex is defined and VAR_Zabbix40SV_HistoryStorageDateIndex != None %}
HistoryStorageDateIndex={{ VAR_Zabbix40SV_HistoryStorageDateIndex }}
{% endif %}

### Option: ExportDir
#	Directory for real time export of events, history and trends in newline delimited JSON format.
#	If set, enables real time export.
#
# Mandatory: no
# Default:
# ExportDir=

{% if VAR_Zabbix40SV_ExportDir is defined and VAR_Zabbix40SV_ExportDir != None %}
ExportDir={{ VAR_Zabbix40SV_ExportDir }}
{% endif %}

### Option: ExportFileSize
#	Maximum size per export file in bytes.
#	Only used for rotation if ExportDir is set.
#
# Mandatory: no
# Range: 1M-1G
# Default:
# ExportFileSize=1G

{% if VAR_Zabbix40SV_ExportFileSize is defined and VAR_Zabbix40SV_ExportFileSize != None %}
ExportFileSize={{ VAR_Zabbix40SV_ExportFileSize }}
{% endif %}

############ ADVANCED PARAMETERS ################

### Option: StartPollers
#	Number of pre-forked instances of pollers.
#
# Mandatory: no
# Range: 0-1000
# Default:
# StartPollers=5

{% if VAR_Zabbix40SV_StartPollers is defined and VAR_Zabbix40SV_StartPollers != None %}
StartPollers={{ VAR_Zabbix40SV_StartPollers }}
{% endif %}

### Option: StartIPMIPollers
#	Number of pre-forked instances of IPMI pollers.
#	The IPMI manager process is automatically started when at least one IPMI poller is started.
#
# Mandatory: no
# Range: 0-1000
# Default:
# StartIPMIPollers=0

{% if VAR_Zabbix40SV_StartIPMIPollers is defined and VAR_Zabbix40SV_StartIPMIPollers != None %}
StartIPMIPollers={{ VAR_Zabbix40SV_StartIPMIPollers }}
{% endif %}

### Option: StartPreprocessors
#	Number of pre-forked instances of preprocessing workers.
#	The preprocessing manager process is automatically started when preprocessor worker is started.
#
# Mandatory: no
# Range: 1-1000
# Default:
# StartPreprocessors=3

{% if VAR_Zabbix40SV_StartPreprocessors is defined and VAR_Zabbix40SV_StartPreprocessors != None %}
StartPreprocessors={{ VAR_Zabbix40SV_StartPreprocessors }}
{% endif %}

### Option: StartPollersUnreachable
#	Number of pre-forked instances of pollers for unreachable hosts (including IPMI and Java).
#	At least one poller for unreachable hosts must be running if regular, IPMI or Java pollers
#	are started.
#
# Mandatory: no
# Range: 0-1000
# Default:
# StartPollersUnreachable=1

{% if VAR_Zabbix40SV_StartPollersUnreachable is defined and VAR_Zabbix40SV_StartPollersUnreachable != None %}
StartPollersUnreachable={{ VAR_Zabbix40SV_StartPollersUnreachable }}
{% endif %}

### Option: StartTrappers
#	Number of pre-forked instances of trappers.
#	Trappers accept incoming connections from Zabbix sender, active agents and active proxies.
#	At least one trapper process must be running to display server availability and view queue
#	in the frontend.
#
# Mandatory: no
# Range: 0-1000
# Default:
# StartTrappers=5

{% if VAR_Zabbix40SV_StartTrappers is defined and VAR_Zabbix40SV_StartTrappers != None %}
StartTrappers={{ VAR_Zabbix40SV_StartTrappers }}
{% endif %}

### Option: StartPingers
#	Number of pre-forked instances of ICMP pingers.
#
# Mandatory: no
# Range: 0-1000
# Default:
# StartPingers=1

{% if VAR_Zabbix40SV_StartPingers is defined and VAR_Zabbix40SV_StartPingers != None %}
StartPingers={{ VAR_Zabbix40SV_StartPingers }}
{% endif %}

### Option: StartDiscoverers
#	Number of pre-forked instances of discoverers.
#
# Mandatory: no
# Range: 0-250
# Default:
# StartDiscoverers=1

{% if VAR_Zabbix40SV_StartDiscoverers is defined and VAR_Zabbix40SV_StartDiscoverers != None %}
StartDiscoverers={{ VAR_Zabbix40SV_StartDiscoverers }}
{% endif %}

### Option: StartHTTPPollers
#	Number of pre-forked instances of HTTP pollers.
#
# Mandatory: no
# Range: 0-1000
# Default:
# StartHTTPPollers=1

{% if VAR_Zabbix40SV_StartHTTPPollers is defined and VAR_Zabbix40SV_StartHTTPPollers != None %}
StartHTTPPollers={{ VAR_Zabbix40SV_StartHTTPPollers }}
{% endif %}

### Option: StartTimers
#	Number of pre-forked instances of timers.
#	Timers process maintenance periods.
#	Only the first timer process handles host maintenance updates. Problem suppression updates are shared.
#	between all timers.
#
# Mandatory: no
# Range: 1-1000
# Default:
# StartTimers=1

{% if VAR_Zabbix40SV_StartTimers is defined and VAR_Zabbix40SV_StartTimers != None %}
StartTimers={{ VAR_Zabbix40SV_StartTimers }}
{% endif %}

### Option: StartEscalators
#	Number of pre-forked instances of escalators.
#
# Mandatory: no
# Range: 0-100
# Default:
# StartEscalators=1

{% if VAR_Zabbix40SV_StartEscalators is defined and VAR_Zabbix40SV_StartEscalators != None %}
StartEscalators={{ VAR_Zabbix40SV_StartEscalators }}
{% endif %}

### Option: StartAlerters
#	Number of pre-forked instances of alerters.
#	Alerters send the notifications created by action operations.
#
# Mandatory: no
# Range: 0-100
# Default:
# StartAlerters=3

{% if VAR_Zabbix40SV_StartAlerters is defined and VAR_Zabbix40SV_StartAlerters != None %}
StartAlerters={{ VAR_Zabbix40SV_StartAlerters }}
{% endif %}

### Option: JavaGateway
#	IP address (or hostname) of Zabbix Java gateway.
#	Only required if Java pollers are started.
#
# Mandatory: no
# Default:
# JavaGateway=

{% if VAR_Zabbix40SV_JavaGateway is defined and VAR_Zabbix40SV_JavaGateway != None %}
JavaGateway={{ VAR_Zabbix40SV_JavaGateway }}
{% endif %}

### Option: JavaGatewayPort
#	Port that Zabbix Java gateway listens on.
#
# Mandatory: no
# Range: 1024-32767
# Default:
# JavaGatewayPort=10052

{% if VAR_Zabbix40SV_JavaGatewayPort is defined and VAR_Zabbix40SV_JavaGatewayPort != None %}
JavaGatewayPort={{ VAR_Zabbix40SV_JavaGatewayPort }}
{% endif %}

### Option: StartJavaPollers
#	Number of pre-forked instances of Java pollers.
#
# Mandatory: no
# Range: 0-1000
# Default:
# StartJavaPollers=0

{% if VAR_Zabbix40SV_StartJavaPollers is defined and VAR_Zabbix40SV_StartJavaPollers != None %}
StartJavaPollers={{ VAR_Zabbix40SV_StartJavaPollers }}
{% endif %}

### Option: StartVMwareCollectors
#	Number of pre-forked vmware collector instances.
#
# Mandatory: no
# Range: 0-250
# Default:
# StartVMwareCollectors=0

{% if VAR_Zabbix40SV_StartVMwareCollectors is defined and VAR_Zabbix40SV_StartVMwareCollectors != None %}
StartVMwareCollectors={{ VAR_Zabbix40SV_StartVMwareCollectors }}
{% endif %}

### Option: VMwareFrequency
#	How often Zabbix will connect to VMware service to obtain a new data.
#
# Mandatory: no
# Range: 10-86400
# Default:
# VMwareFrequency=60

{% if VAR_Zabbix40SV_VMwareFrequency is defined and VAR_Zabbix40SV_VMwareFrequency != None %}
VMwareFrequency={{ VAR_Zabbix40SV_VMwareFrequency }}
{% endif %}

### Option: VMwarePerfFrequency
#	How often Zabbix will connect to VMware service to obtain performance data.
#
# Mandatory: no
# Range: 10-86400
# Default:
# VMwarePerfFrequency=60

{% if VAR_Zabbix40SV_VMwarePerfFrequency is defined and VAR_Zabbix40SV_VMwarePerfFrequency != None %}
VMwarePerfFrequency={{ VAR_Zabbix40SV_VMwarePerfFrequency }}
{% endif %}

### Option: VMwareCacheSize
#	Size of VMware cache, in bytes.
#	Shared memory size for storing VMware data.
#	Only used if VMware collectors are started.
#
# Mandatory: no
# Range: 256K-2G
# Default:
# VMwareCacheSize=8M

{% if VAR_Zabbix40SV_VMwareCacheSize is defined and VAR_Zabbix40SV_VMwareCacheSize != None %}
VMwareCacheSize={{ VAR_Zabbix40SV_VMwareCacheSize }}
{% endif %}

### Option: VMwareTimeout
#	Specifies how many seconds vmware collector waits for response from VMware service.
#
# Mandatory: no
# Range: 1-300
# Default:
# VMwareTimeout=10

{% if VAR_Zabbix40SV_VMwareTimeout is defined and VAR_Zabbix40SV_VMwareTimeout != None %}
VMwareTimeout={{ VAR_Zabbix40SV_VMwareTimeout }}
{% endif %}

### Option: SNMPTrapperFile
#	Temporary file used for passing data from SNMP trap daemon to the server.
#	Must be the same as in zabbix_trap_receiver.pl or SNMPTT configuration file.
#
# Mandatory: no
# Default:
# SNMPTrapperFile=/tmp/zabbix_traps.tmp

{% if VAR_Zabbix40SV_SNMPTrapperFile is defined and VAR_Zabbix40SV_SNMPTrapperFile != None %}
SNMPTrapperFile={{ VAR_Zabbix40SV_SNMPTrapperFile }}
{% endif %}

### Option: StartSNMPTrapper
#	If 1, SNMP trapper process is started.
#
# Mandatory: no
# Range: 0-1
# Default:
# StartSNMPTrapper=0

{% if VAR_Zabbix40SV_StartSNMPTrapper is defined and VAR_Zabbix40SV_StartSNMPTrapper != None %}
StartSNMPTrapper={{ VAR_Zabbix40SV_StartSNMPTrapper }}
{% endif %}

### Option: ListenIP
#	List of comma delimited IP addresses that the trapper should listen on.
#	Trapper will listen on all network interfaces if this parameter is missing.
#
# Mandatory: no
# Default:
# ListenIP=0.0.0.0

{% if VAR_Zabbix40SV_ListenIP is defined and VAR_Zabbix40SV_ListenIP != None %}
ListenIP={{ VAR_Zabbix40SV_ListenIP }}
{% endif %}

### Option: HousekeepingFrequency
#	How often Zabbix will perform housekeeping procedure (in hours).
#	Housekeeping is removing outdated information from the database.
#	To prevent Housekeeper from being overloaded, no more than 4 times HousekeepingFrequency
#	hours of outdated information are deleted in one housekeeping cycle, for each item.
#	To lower load on server startup housekeeping is postponed for 30 minutes after server start.
#	With HousekeepingFrequency=0 the housekeeper can be only executed using the runtime control option.
#	In this case the period of outdated information deleted in one housekeeping cycle is 4 times the
#	period since the last housekeeping cycle, but not less than 4 hours and not greater than 4 days.
#
# Mandatory: no
# Range: 0-24
# Default:
# HousekeepingFrequency=1

{% if VAR_Zabbix40SV_HousekeepingFrequency is defined and VAR_Zabbix40SV_HousekeepingFrequency != None %}
HousekeepingFrequency={{ VAR_Zabbix40SV_HousekeepingFrequency }}
{% endif %}

### Option: MaxHousekeeperDelete
#	The table "housekeeper" contains "tasks" for housekeeping procedure in the format:
#	[housekeeperid], [tablename], [field], [value].
#	No more than 'MaxHousekeeperDelete' rows (corresponding to [tablename], [field], [value])
#	will be deleted per one task in one housekeeping cycle.
#	SQLite3 does not use this parameter, deletes all corresponding rows without a limit.
#	If set to 0 then no limit is used at all. In this case you must know what you are doing!
#
# Mandatory: no
# Range: 0-1000000
# Default:
# MaxHousekeeperDelete=5000

{% if VAR_Zabbix40SV_MaxHousekeeperDelete is defined and VAR_Zabbix40SV_MaxHousekeeperDelete != None %}
MaxHousekeeperDelete={{ VAR_Zabbix40SV_MaxHousekeeperDelete }}
{% endif %}

### Option: CacheSize
#	Size of configuration cache, in bytes.
#	Shared memory size for storing host, item and trigger data.
#
# Mandatory: no
# Range: 128K-8G
# Default:
# CacheSize=8M

{% if VAR_Zabbix40SV_CacheSize is defined and VAR_Zabbix40SV_CacheSize != None %}
CacheSize={{ VAR_Zabbix40SV_CacheSize }}
{% endif %}

### Option: CacheUpdateFrequency
#	How often Zabbix will perform update of configuration cache, in seconds.
#
# Mandatory: no
# Range: 1-3600
# Default:
# CacheUpdateFrequency=60

{% if VAR_Zabbix40SV_CacheUpdateFrequency is defined and VAR_Zabbix40SV_CacheUpdateFrequency != None %}
CacheUpdateFrequency={{ VAR_Zabbix40SV_CacheUpdateFrequency }}
{% endif %}

### Option: StartDBSyncers
#	Number of pre-forked instances of DB Syncers.
#
# Mandatory: no
# Range: 1-100
# Default:
# StartDBSyncers=4

{% if VAR_Zabbix40SV_StartDBSyncers is defined and VAR_Zabbix40SV_StartDBSyncers != None %}
StartDBSyncers={{ VAR_Zabbix40SV_StartDBSyncers }}
{% endif %}

### Option: HistoryCacheSize
#	Size of history cache, in bytes.
#	Shared memory size for storing history data.
#
# Mandatory: no
# Range: 128K-2G
# Default:
# HistoryCacheSize=16M

{% if VAR_Zabbix40SV_HistoryCacheSize is defined and VAR_Zabbix40SV_HistoryCacheSize != None %}
HistoryCacheSize={{ VAR_Zabbix40SV_HistoryCacheSize }}
{% endif %}

### Option: HistoryIndexCacheSize
#	Size of history index cache, in bytes.
#	Shared memory size for indexing history cache.
#
# Mandatory: no
# Range: 128K-2G
# Default:
# HistoryIndexCacheSize=4M

{% if VAR_Zabbix40SV_HistoryIndexCacheSize is defined and VAR_Zabbix40SV_HistoryIndexCacheSize != None %}
HistoryIndexCacheSize={{ VAR_Zabbix40SV_HistoryIndexCacheSize }}
{% endif %}

### Option: TrendCacheSize
#	Size of trend cache, in bytes.
#	Shared memory size for storing trends data.
#
# Mandatory: no
# Range: 128K-2G
# Default:
# TrendCacheSize=4M

{% if VAR_Zabbix40SV_TrendCacheSize is defined and VAR_Zabbix40SV_TrendCacheSize != None %}
TrendCacheSize={{ VAR_Zabbix40SV_TrendCacheSize }}
{% endif %}

### Option: ValueCacheSize
#	Size of history value cache, in bytes.
#	Shared memory size for caching item history data requests.
#	Setting to 0 disables value cache.
#
# Mandatory: no
# Range: 0,128K-64G
# Default:
# ValueCacheSize=8M

{% if VAR_Zabbix40SV_ValueCacheSize is defined and VAR_Zabbix40SV_ValueCacheSize != None %}
ValueCacheSize={{ VAR_Zabbix40SV_ValueCacheSize }}
{% endif %}

### Option: Timeout
#	Specifies how long we wait for agent, SNMP device or external check (in seconds).
#
# Mandatory: no
# Range: 1-30
# Default:
# Timeout=3

{% if VAR_Zabbix40SV_Timeout is defined and VAR_Zabbix40SV_Timeout != None %}
Timeout={{ VAR_Zabbix40SV_Timeout }}
{% endif %}

### Option: TrapperTimeout
#	Specifies how many seconds trapper may spend processing new data.
#
# Mandatory: no
# Range: 1-300
# Default:
# TrapperTimeout=300

{% if VAR_Zabbix40SV_TrapperTimeout is defined and VAR_Zabbix40SV_TrapperTimeout != None %}
TrapperTimeout={{ VAR_Zabbix40SV_TrapperTimeout }}
{% endif %}

### Option: UnreachablePeriod
#	After how many seconds of unreachability treat a host as unavailable.
#
# Mandatory: no
# Range: 1-3600
# Default:
# UnreachablePeriod=45

{% if VAR_Zabbix40SV_UnreachablePeriod is defined and VAR_Zabbix40SV_UnreachablePeriod != None %}
UnreachablePeriod={{ VAR_Zabbix40SV_UnreachablePeriod }}
{% endif %}

### Option: UnavailableDelay
#	How often host is checked for availability during the unavailability period, in seconds.
#
# Mandatory: no
# Range: 1-3600
# Default:
# UnavailableDelay=60

{% if VAR_Zabbix40SV_UnavailableDelay is defined and VAR_Zabbix40SV_UnavailableDelay != None %}
UnavailableDelay={{ VAR_Zabbix40SV_UnavailableDelay }}
{% endif %}

### Option: UnreachableDelay
#	How often host is checked for availability during the unreachability period, in seconds.
#
# Mandatory: no
# Range: 1-3600
# Default:
# UnreachableDelay=15

{% if VAR_Zabbix40SV_UnreachableDelay is defined and VAR_Zabbix40SV_UnreachableDelay != None %}
UnreachableDelay={{ VAR_Zabbix40SV_UnreachableDelay }}
{% endif %}

### Option: AlertScriptsPath
#	Full path to location of custom alert scripts.
#	Default depends on compilation options.
#	To see the default path run command "zabbix_server --help".
#
# Mandatory: no
# Default:
# AlertScriptsPath=${datadir}/zabbix/alertscripts

{% if VAR_Zabbix40SV_AlertScriptsPath is defined and VAR_Zabbix40SV_AlertScriptsPath != None %}
AlertScriptsPath={{ VAR_Zabbix40SV_AlertScriptsPath }}
{% endif %}

### Option: ExternalScripts
#	Full path to location of external scripts.
#	Default depends on compilation options.
#	To see the default path run command "zabbix_server --help".
#
# Mandatory: no
# Default:
# ExternalScripts=${datadir}/zabbix/externalscripts

{% if VAR_Zabbix40SV_ExternalScripts is defined and VAR_Zabbix40SV_ExternalScripts != None %}
ExternalScripts={{ VAR_Zabbix40SV_ExternalScripts }}
{% endif %}

### Option: FpingLocation
#	Location of fping.
#	Make sure that fping binary has root ownership and SUID flag set.
#
# Mandatory: no
# Default:
# FpingLocation=/usr/sbin/fping

{% if VAR_Zabbix40SV_FpingLocation is defined and VAR_Zabbix40SV_FpingLocation != None %}
FpingLocation={{ VAR_Zabbix40SV_FpingLocation }}
{% endif %}

### Option: Fping6Location
#	Location of fping6.
#	Make sure that fping6 binary has root ownership and SUID flag set.
#	Make empty if your fping utility is capable to process IPv6 addresses.
#
# Mandatory: no
# Default:
# Fping6Location=/usr/sbin/fping6

{% if VAR_Zabbix40SV_Fping6Location is defined and VAR_Zabbix40SV_Fping6Location != None %}
Fping6Location={{ VAR_Zabbix40SV_Fping6Location }}
{% endif %}

### Option: SSHKeyLocation
#	Location of public and private keys for SSH checks and actions.
#
# Mandatory: no
# Default:
# SSHKeyLocation=

{% if VAR_Zabbix40SV_SSHKeyLocation is defined and VAR_Zabbix40SV_SSHKeyLocation != None %}
SSHKeyLocation={{ VAR_Zabbix40SV_SSHKeyLocation }}
{% endif %}

### Option: LogSlowQueries
#	How long a database query may take before being logged (in milliseconds).
#	Only works if DebugLevel set to 3, 4 or 5.
#	0 - don't log slow queries.
#
# Mandatory: no
# Range: 1-3600000
# Default:
# LogSlowQueries=0

{% if VAR_Zabbix40SV_LogSlowQueries is defined and VAR_Zabbix40SV_LogSlowQueries != None %}
LogSlowQueries={{ VAR_Zabbix40SV_LogSlowQueries }}
{% endif %}

### Option: TmpDir
#	Temporary directory.
#
# Mandatory: no
# Default:
# TmpDir=/tmp

{% if VAR_Zabbix40SV_TmpDir is defined and VAR_Zabbix40SV_TmpDir != None %}
TmpDir={{ VAR_Zabbix40SV_TmpDir }}
{% endif %}

### Option: StartProxyPollers
#	Number of pre-forked instances of pollers for passive proxies.
#
# Mandatory: no
# Range: 0-250
# Default:
# StartProxyPollers=1

{% if VAR_Zabbix40SV_StartProxyPollers is defined and VAR_Zabbix40SV_StartProxyPollers != None %}
StartProxyPollers={{ VAR_Zabbix40SV_StartProxyPollers }}
{% endif %}

### Option: ProxyConfigFrequency
#	How often Zabbix Server sends configuration data to a Zabbix Proxy in seconds.
#	This parameter is used only for proxies in the passive mode.
#
# Mandatory: no
# Range: 1-3600*24*7
# Default:
# ProxyConfigFrequency=3600

{% if VAR_Zabbix40SV_ProxyConfigFrequency is defined and VAR_Zabbix40SV_ProxyConfigFrequency != None %}
ProxyConfigFrequency={{ VAR_Zabbix40SV_ProxyConfigFrequency }}
{% endif %}

### Option: ProxyDataFrequency
#	How often Zabbix Server requests history data from a Zabbix Proxy in seconds.
#	This parameter is used only for proxies in the passive mode.
#
# Mandatory: no
# Range: 1-3600
# Default:
# ProxyDataFrequency=1

{% if VAR_Zabbix40SV_ProxyDataFrequency is defined and VAR_Zabbix40SV_ProxyDataFrequency != None %}
ProxyDataFrequency={{ VAR_Zabbix40SV_ProxyDataFrequency }}
{% endif %}

### Option: AllowRoot
#	Allow the server to run as 'root'. If disabled and the server is started by 'root', the server
#	will try to switch to the user specified by the User configuration option instead.
#	Has no effect if started under a regular user.
#	0 - do not allow
#	1 - allow
#
# Mandatory: no
# Default:
# AllowRoot=0

{% if VAR_Zabbix40SV_AllowRoot is defined and VAR_Zabbix40SV_AllowRoot != None %}
AllowRoot={{ VAR_Zabbix40SV_AllowRoot }}
{% endif %}

### Option: User
#	Drop privileges to a specific, existing user on the system.
#	Only has effect if run as 'root' and AllowRoot is disabled.
#
# Mandatory: no
# Default:
# User=zabbix

{% if VAR_Zabbix40SV_User is defined and VAR_Zabbix40SV_User != None %}
User={{ VAR_Zabbix40SV_User }}
{% endif %}

### Option: Include
#	You may include individual files or all files in a directory in the configuration file.
#	Installing Zabbix will create include directory in /usr/local/etc, unless modified during the compile time.
#
# Mandatory: no
# Default:
# Include=

# Include=/usr/local/etc/zabbix_server.general.conf
# Include=/usr/local/etc/zabbix_server.conf.d/
# Include=/usr/local/etc/zabbix_server.conf.d/*.conf

{% if VAR_Zabbix40SV_Include is defined and VAR_Zabbix40SV_Include != None %}
{% for zabbixsv_local_include in VAR_Zabbix40SV_Include %}
{% if zabbixsv_local_include != None %}
Include={{ zabbixsv_local_include }}
{% endif %}
{% endfor %}
{% endif %}

### Option: SSLCertLocation
#	Location of SSL client certificates.
#	This parameter is used only in web monitoring.
#	Default depends on compilation options.
#	To see the default path run command "zabbix_server --help".
#
# Mandatory: no
# Default:
# SSLCertLocation=${datadir}/zabbix/ssl/certs

{% if VAR_Zabbix40SV_SSLCertLocation is defined and VAR_Zabbix40SV_SSLCertLocation != None %}
SSLCertLocation={{ VAR_Zabbix40SV_SSLCertLocation }}
{% endif %}

### Option: SSLKeyLocation
#	Location of private keys for SSL client certificates.
#	This parameter is used only in web monitoring.
#	Default depends on compilation options.
#	To see the default path run command "zabbix_server --help".
#
# Mandatory: no
# Default:
# SSLKeyLocation=${datadir}/zabbix/ssl/keys

{% if VAR_Zabbix40SV_SSLKeyLocation is defined and VAR_Zabbix40SV_SSLKeyLocation != None %}
SSLKeyLocation={{ VAR_Zabbix40SV_SSLKeyLocation }}
{% endif %}

### Option: SSLCALocation
#	Override the location of certificate authority (CA) files for SSL server certificate verification.
#	If not set, system-wide directory will be used.
#	This parameter is used only in web monitoring and SMTP authentication.
#
# Mandatory: no
# Default:
# SSLCALocation=

{% if VAR_Zabbix40SV_SSLCALocation is defined and VAR_Zabbix40SV_SSLCALocation != None %}
SSLCALocation={{ VAR_Zabbix40SV_SSLCALocation }}
{% endif %}

####### LOADABLE MODULES #######

### Option: LoadModulePath
#	Full path to location of server modules.
#	Default depends on compilation options.
#	To see the default path run command "zabbix_server --help".
#
# Mandatory: no
# Default:
# LoadModulePath=${libdir}/modules

{% if VAR_Zabbix40SV_LoadModulePath is defined and VAR_Zabbix40SV_LoadModulePath != None %}
LoadModulePath={{ VAR_Zabbix40SV_LoadModulePath }}
{% endif %}

### Option: LoadModule
#	Module to load at server startup. Modules are used to extend functionality of the server.
#	Format: LoadModule=<module.so>
#	The modules must be located in directory specified by LoadModulePath.
#	It is allowed to include multiple LoadModule parameters.
#
# Mandatory: no
# Default:
# LoadModule=

{% if VAR_Zabbix40SV_LoadModule is defined and VAR_Zabbix40SV_LoadModule != None %}
{% for zabbixsv_local_loadmodule in VAR_Zabbix40SV_LoadModule %}
{% if zabbixsv_local_loadmodule != None %}
LoadModule={{ zabbixsv_local_loadmodule }}
{% endif %}
{% endfor %}
{% endif %}

####### TLS-RELATED PARAMETERS #######

### Option: TLSCAFile
#	Full pathname of a file containing the top-level CA(s) certificates for
#	peer certificate verification.
#
# Mandatory: no
# Default:
# TLSCAFile=

{% if VAR_Zabbix40SV_TLSCAFile is defined and VAR_Zabbix40SV_TLSCAFile != None %}
TLSCAFile={{ VAR_Zabbix40SV_TLSCAFile }}
{% endif %}

### Option: TLSCRLFile
#	Full pathname of a file containing revoked certificates.
#
# Mandatory: no
# Default:
# TLSCRLFile=

{% if VAR_Zabbix40SV_TLSCRLFile is defined and VAR_Zabbix40SV_TLSCRLFile != None %}
TLSCRLFile={{ VAR_Zabbix40SV_TLSCRLFile }}
{% endif %}

### Option: TLSCertFile
#	Full pathname of a file containing the server certificate or certificate chain.
#
# Mandatory: no
# Default:
# TLSCertFile=

{% if VAR_Zabbix40SV_TLSCertFile is defined and VAR_Zabbix40SV_TLSCertFile != None %}
TLSCertFile={{ VAR_Zabbix40SV_TLSCertFile }}
{% endif %}

### Option: TLSKeyFile
#	Full pathname of a file containing the server private key.
#
# Mandatory: no
# Default:
# TLSKeyFile=

{% if VAR_Zabbix40SV_TLSKeyFile is defined and VAR_Zabbix40SV_TLSKeyFile != None %}
TLSKeyFile={{ VAR_Zabbix40SV_TLSKeyFile }}
{% endif %}

